{"ast":null,"code":"var _jsxFileName = \"/home/erick/Desktop/life-hacks/hacks-frontend/src/Components/NewCheats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewCheats() {\n  _s();\n  const [cheats, setCheats] = useState([]);\n  useEffect(() => {\n    fetchCheats();\n  }, []);\n  const fetchCheats = async () => {\n    try {\n      const response = await fetch('api/viewcheats');\n      if (!response.ok) {\n        throw new Error('Failed to fetch cheats');\n      }\n      const data = await response.json();\n      setCheats(data['All Cheats']);\n    } catch (error) {\n      console.error('Error fetching cheats:', error);\n    }\n  };\n  const [likedCheats, setLikedCheats] = useState(JSON.parse(localStorage.getItem('likedCheats')) || []);\n  const [dislikedCheats, setDislikedCheats] = useState(JSON.parse(localStorage.getItem('dislikedCheats')) || []);\n  const [reportedCheats, setReportedCheats] = useState(JSON.parse(localStorage.getItem('reportedCheats')) || []);\n  const handleLike = async cheatId => {\n    try {\n      // Make sure a user can only click once\n      if (!likedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map(cheat => {\n          if (cheat.id === cheatId) {\n            cheat.likes += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setLikedCheats([...likedCheats, cheatId]);\n        localStorage.setItem('likedCheats', JSON.stringify([...likedCheats, cheatId]));\n\n        // Send PUT request to update the like count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, {\n          likes: 1\n        });\n      }\n    } catch (error) {\n      console.error('Error liking cheat:', error);\n    }\n  };\n  const handleDislike = async cheatId => {\n    try {\n      // Make sure a user can only click once\n      if (!dislikedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map(cheat => {\n          if (cheat.id === cheatId) {\n            cheat.dislikes += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setDislikedCheats([...dislikedCheats, cheatId]);\n        localStorage.setItem('dislikedCheats', JSON.stringify([...dislikedCheats, cheatId]));\n\n        // Send PUT request to update the dislike count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, {\n          dislikes: 1\n        });\n      }\n    } catch (error) {\n      console.error('Error disliking cheat:', error);\n    }\n  };\n  const handleReport = async cheatId => {\n    try {\n      // Make sure a user can only click once\n      if (!reportedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map(cheat => {\n          if (cheat.id === cheatId) {\n            cheat.reports += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setReportedCheats([...reportedCheats, cheatId]);\n        localStorage.setItem('reportedCheats', JSON.stringify([...reportedCheats, cheatId]));\n\n        // Send PUT request to update the report count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, {\n          reports: 1\n        });\n      }\n    } catch (error) {\n      console.error('Error reporting cheat:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cheats.map(cheat => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cheat-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: cheat.hack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cheat-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [cheat.username, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hack: \", cheat.likes, \" | \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Wack: \", cheat.dislikes, \" | \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Reports: \", cheat.reports, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-actions-side\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            disabled: likedCheats.includes(cheat.id),\n            onClick: () => handleLike(cheat.id),\n            children: \" Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            disabled: dislikedCheats.includes(cheat.id),\n            onClick: () => handleDislike(cheat.id),\n            children: \"Dislike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            disabled: reportedCheats.includes(cheat.id),\n            onClick: () => handleReport(cheat.id),\n            children: \"Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, cheat.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(NewCheats, \"HvKn5fRYzNGV8lrSzPU4WwEOKI8=\");\n_c = NewCheats;\nexport default NewCheats;\nvar _c;\n$RefreshReg$(_c, \"NewCheats\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NewCheats","_s","cheats","setCheats","fetchCheats","response","fetch","ok","Error","data","json","error","console","likedCheats","setLikedCheats","JSON","parse","localStorage","getItem","dislikedCheats","setDislikedCheats","reportedCheats","setReportedCheats","handleLike","cheatId","includes","updatedCheats","map","cheat","id","likes","setItem","stringify","axios","put","handleDislike","dislikes","handleReport","reports","children","className","hack","fileName","_jsxFileName","lineNumber","columnNumber","username","type","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/erick/Desktop/life-hacks/hacks-frontend/src/Components/NewCheats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction NewCheats() {\n  const [cheats, setCheats] = useState([]);\n\n  useEffect(() => {\n    fetchCheats();\n  }, []);\n\n  const fetchCheats = async () => {\n    try {\n      const response = await fetch('api/viewcheats');\n      if (!response.ok) {\n        throw new Error('Failed to fetch cheats');\n      }\n      const data = await response.json();\n      setCheats(data['All Cheats']);\n    } catch (error) {\n      console.error('Error fetching cheats:', error);\n    }\n  };\n\n  const [likedCheats, setLikedCheats] = useState(\n    JSON.parse(localStorage.getItem('likedCheats')) || []\n  );\n  const [dislikedCheats, setDislikedCheats] = useState(\n    JSON.parse(localStorage.getItem('dislikedCheats')) || []\n  );\n  const [reportedCheats, setReportedCheats] = useState(\n    JSON.parse(localStorage.getItem('reportedCheats')) || []\n  );\n\n\n\n\n\n  const handleLike = async (cheatId) => {\n    try {\n      // Make sure a user can only click once\n      if (!likedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map((cheat) => {\n          if (cheat.id === cheatId) {\n            cheat.likes += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setLikedCheats([...likedCheats, cheatId]);\n        localStorage.setItem('likedCheats', JSON.stringify([...likedCheats, cheatId]));\n\n        // Send PUT request to update the like count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, { likes: 1 });\n      }\n    } catch (error) {\n      console.error('Error liking cheat:', error);\n    }\n  };\n\n  const handleDislike = async (cheatId) => {\n    try {\n      // Make sure a user can only click once\n      if (!dislikedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map((cheat) => {\n          if (cheat.id === cheatId) {\n            cheat.dislikes += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setDislikedCheats([...dislikedCheats, cheatId]);\n        localStorage.setItem('dislikedCheats', JSON.stringify([...dislikedCheats, cheatId]));\n\n        // Send PUT request to update the dislike count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, { dislikes: 1 });\n      }\n    } catch (error) {\n      console.error('Error disliking cheat:', error);\n    }\n  };\n\n  const handleReport = async (cheatId) => {\n    try {\n      // Make sure a user can only click once\n      if (!reportedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map((cheat) => {\n          if (cheat.id === cheatId) {\n            cheat.reports += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setReportedCheats([...reportedCheats, cheatId]);\n        localStorage.setItem('reportedCheats', JSON.stringify([...reportedCheats, cheatId]));\n\n        // Send PUT request to update the report count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, { reports: 1 });\n      }\n    } catch (error) {\n      console.error('Error reporting cheat:', error);\n    }\n  };\n\n\n  return (\n    <div>\n        {cheats.map((cheat) => (\n          <div key={cheat.id} className=\"cheat-card\">\n          <div className='card-container'>\n              <div>\n                  <h3>{cheat.hack}</h3>\n                  <div className='cheat-info'>\n                      <h4>{cheat.username} </h4>\n                      <p>Hack: {cheat.likes} | </p>\n                      <p>Wack: {cheat.dislikes} | </p>\n                      <p>Reports: {cheat.reports} </p>\n\n                  </div>\n              </div>\n              <div className='card-actions-side'>\n                  <button type='button' disabled={likedCheats.includes(cheat.id)} onClick={() => handleLike(cheat.id)}> Like</button>\n                  <button type='button' disabled={dislikedCheats.includes(cheat.id)} onClick={() => handleDislike(cheat.id)}>Dislike</button>\n                  <button type='button' disabled={reportedCheats.includes(cheat.id)} onClick={() => handleReport(cheat.id)}>Report</button>\n              \n              </div>\n          </div>\n\n      </div>\n        ))}\n     \n    </div>\n  );\n}\n\nexport default NewCheats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}