{"ast":null,"code":"var _jsxFileName = \"/home/erick/Desktop/life-hacks/hacks-frontend/src/Components/NewCheats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCheats = () => {\n  _s();\n  const [cheats, setCheats] = useState([]);\n  const [likedCheats, setLikedCheats] = useState(JSON.parse(localStorage.getItem('likedCheats')) || []);\n  const [dislikedCheats, setDislikedCheats] = useState(JSON.parse(localStorage.getItem('dislikedCheats')) || []);\n  const [reportedCheats, setReportedCheats] = useState(JSON.parse(localStorage.getItem('reportedCheats')) || []);\n  useEffect(() => {\n    const fetchCheats = async () => {\n      try {\n        const response = await axios.get('/api/viewcheats');\n        setCheats(response.data.Hot);\n      } catch (error) {\n        console.error('Error fetching cheats:', error);\n      }\n    };\n    fetchCheats();\n  }, []);\n  const handleLike = async cheatId => {\n    try {\n      // Make sure a user can only click once\n      if (!likedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map(cheat => {\n          if (cheat.id === cheatId) {\n            cheat.likes += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setLikedCheats([...likedCheats, cheatId]);\n        localStorage.setItem('likedCheats', JSON.stringify([...likedCheats, cheatId]));\n\n        // Send PUT request to update the like count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, {\n          likes: 1\n        });\n      }\n    } catch (error) {\n      console.error('Error liking cheat:', error);\n    }\n  };\n  const handleDislike = async cheatId => {\n    try {\n      // Make sure a user can only click once\n      if (!dislikedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map(cheat => {\n          if (cheat.id === cheatId) {\n            cheat.dislikes += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setDislikedCheats([...dislikedCheats, cheatId]);\n        localStorage.setItem('dislikedCheats', JSON.stringify([...dislikedCheats, cheatId]));\n\n        // Send PUT request to update the dislike count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, {\n          dislikes: 1\n        });\n      }\n    } catch (error) {\n      console.error('Error disliking cheat:', error);\n    }\n  };\n  const handleReport = async cheatId => {\n    try {\n      // Make sure a user can only click once\n      if (!reportedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map(cheat => {\n          if (cheat.id === cheatId) {\n            cheat.reports += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setReportedCheats([...reportedCheats, cheatId]);\n        localStorage.setItem('reportedCheats', JSON.stringify([...reportedCheats, cheatId]));\n\n        // Send PUT request to update the report count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, {\n          reports: 1\n        });\n      }\n    } catch (error) {\n      console.error('Error reporting cheat:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cheat-container\",\n    children: cheats.map(cheat => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cheat-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: cheat.hack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cheat-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [cheat.username, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hack: \", cheat.likes, \" | \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Wack: \", cheat.dislikes, \" | \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Reports: \", cheat.reports, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-actions-side\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            disabled: likedCheats.includes(cheat.id),\n            onClick: () => handleLike(cheat.id),\n            children: \" Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            disabled: dislikedCheats.includes(cheat.id),\n            onClick: () => handleDislike(cheat.id),\n            children: \"Dislike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            disabled: reportedCheats.includes(cheat.id),\n            onClick: () => handleReport(cheat.id),\n            children: \"Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)\n    }, cheat.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCheats, \"emcOQ5+hy0Avdl370aAlZrDBQOY=\");\n_c = NewCheats;\nexport default NewCheats;\nvar _c;\n$RefreshReg$(_c, \"NewCheats\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","NewCheats","_s","cheats","setCheats","likedCheats","setLikedCheats","JSON","parse","localStorage","getItem","dislikedCheats","setDislikedCheats","reportedCheats","setReportedCheats","fetchCheats","response","get","data","Hot","error","console","handleLike","cheatId","includes","updatedCheats","map","cheat","id","likes","setItem","stringify","put","handleDislike","dislikes","handleReport","reports","className","children","hack","fileName","_jsxFileName","lineNumber","columnNumber","username","type","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/erick/Desktop/life-hacks/hacks-frontend/src/Components/NewCheats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst NewCheats = () => {\n  const [cheats, setCheats] = useState([]);\n  const [likedCheats, setLikedCheats] = useState(\n    JSON.parse(localStorage.getItem('likedCheats')) || []\n  );\n  const [dislikedCheats, setDislikedCheats] = useState(\n    JSON.parse(localStorage.getItem('dislikedCheats')) || []\n  );\n  const [reportedCheats, setReportedCheats] = useState(\n    JSON.parse(localStorage.getItem('reportedCheats')) || []\n  );\n\n  useEffect(() => {\n    const fetchCheats = async () => {\n      try {\n        const response = await axios.get('/api/viewcheats');\n        setCheats(response.data.Hot);\n      } catch (error) {\n        console.error('Error fetching cheats:', error);\n      }\n    };\n\n    fetchCheats();\n  }, []);\n\n  const handleLike = async (cheatId) => {\n    try {\n      // Make sure a user can only click once\n      if (!likedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map((cheat) => {\n          if (cheat.id === cheatId) {\n            cheat.likes += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setLikedCheats([...likedCheats, cheatId]);\n        localStorage.setItem('likedCheats', JSON.stringify([...likedCheats, cheatId]));\n\n        // Send PUT request to update the like count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, { likes: 1 });\n      }\n    } catch (error) {\n      console.error('Error liking cheat:', error);\n    }\n  };\n\n  const handleDislike = async (cheatId) => {\n    try {\n      // Make sure a user can only click once\n      if (!dislikedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map((cheat) => {\n          if (cheat.id === cheatId) {\n            cheat.dislikes += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setDislikedCheats([...dislikedCheats, cheatId]);\n        localStorage.setItem('dislikedCheats', JSON.stringify([...dislikedCheats, cheatId]));\n\n        // Send PUT request to update the dislike count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, { dislikes: 1 });\n      }\n    } catch (error) {\n      console.error('Error disliking cheat:', error);\n    }\n  };\n\n  const handleReport = async (cheatId) => {\n    try {\n      // Make sure a user can only click once\n      if (!reportedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map((cheat) => {\n          if (cheat.id === cheatId) {\n            cheat.reports += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setReportedCheats([...reportedCheats, cheatId]);\n        localStorage.setItem('reportedCheats', JSON.stringify([...reportedCheats, cheatId]));\n\n        // Send PUT request to update the report count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, { reports: 1 });\n      }\n    } catch (error) {\n      console.error('Error reporting cheat:', error);\n    }\n  };\n\n  return (\n    <div className='cheat-container'>\n      {cheats.map((cheat) => (\n        <div key={cheat.id} className=\"cheat-card\">\n            <div className='card-container'>\n                <div>\n                    <h3>{cheat.hack}</h3>\n                    <div className='cheat-info'>\n                        <h4>{cheat.username} </h4>\n                        <p>Hack: {cheat.likes} | </p>\n                        <p>Wack: {cheat.dislikes} | </p>\n                        <p>Reports: {cheat.reports} </p>\n\n                    </div>\n                </div>\n                <div className='card-actions-side'>\n                    <button type='button' disabled={likedCheats.includes(cheat.id)} onClick={() => handleLike(cheat.id)}> Like</button>\n                    <button type='button' disabled={dislikedCheats.includes(cheat.id)} onClick={() => handleDislike(cheat.id)}>Dislike</button>\n                    <button type='button' disabled={reportedCheats.includes(cheat.id)} onClick={() => handleReport(cheat.id)}>Report</button>\n                \n                </div>\n            </div>\n  \n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default NewCheats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}