{"ast":null,"code":"var _jsxFileName = \"/home/erick/Desktop/life-hacks/hacks-frontend/src/Components/NewCheats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewCheats = () => {\n  _s();\n  const [cheats, setCheats] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hacksPerPage] = useState(10); // Number of hacks per page\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const fetchCheats = async () => {\n      try {\n        const response = await axios.get('/api/viewcheats');\n        setCheats(response.data.Hot);\n        setLoading(false); // Set loading to false after data is fetched\n      } catch (error) {\n        console.error('Error fetching cheats:', error);\n        setLoading(false); // Set loading to false even if there's an error\n      }\n    };\n    fetchCheats();\n  }, []);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const [likedCheats, setLikedCheats] = useState(JSON.parse(localStorage.getItem('likedCheats')) || []);\n  const [dislikedCheats, setDislikedCheats] = useState(JSON.parse(localStorage.getItem('dislikedCheats')) || []);\n  const [reportedCheats, setReportedCheats] = useState(JSON.parse(localStorage.getItem('reportedCheats')) || []);\n  const handleLike = async cheatId => {\n    try {\n      // Make sure a user can only click once\n      if (!likedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map(cheat => {\n          if (cheat.id === cheatId) {\n            cheat.likes += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setLikedCheats([...likedCheats, cheatId]);\n        localStorage.setItem('likedCheats', JSON.stringify([...likedCheats, cheatId]));\n\n        // Send PUT request to update the like count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, {\n          likes: 1\n        });\n      }\n    } catch (error) {\n      console.error('Error liking cheat:', error);\n    }\n  };\n  const handleDislike = async cheatId => {\n    try {\n      // Make sure a user can only click once\n      if (!dislikedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map(cheat => {\n          if (cheat.id === cheatId) {\n            cheat.dislikes += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setDislikedCheats([...dislikedCheats, cheatId]);\n        localStorage.setItem('dislikedCheats', JSON.stringify([...dislikedCheats, cheatId]));\n\n        // Send PUT request to update the dislike count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, {\n          dislikes: 1\n        });\n      }\n    } catch (error) {\n      console.error('Error disliking cheat:', error);\n    }\n  };\n  const handleReport = async cheatId => {\n    try {\n      // Make sure a user can only click once\n      if (!reportedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map(cheat => {\n          if (cheat.id === cheatId) {\n            cheat.reports += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setReportedCheats([...reportedCheats, cheatId]);\n        localStorage.setItem('reportedCheats', JSON.stringify([...reportedCheats, cheatId]));\n\n        // Send PUT request to update the report count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, {\n          reports: 1\n        });\n      }\n    } catch (error) {\n      console.error('Error reporting cheat:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cheat-container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading cheats...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [cheats.slice((currentPage - 1) * hacksPerPage, currentPage * hacksPerPage).map(cheat => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cheat-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: cheat.hack\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cheat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [cheat.username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Hack: \", cheat.likes, \" | \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Wack: \", cheat.dislikes, \" | \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Reports: \", cheat.reports, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-actions-side\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              disabled: likedCheats.includes(cheat.id),\n              onClick: () => handleLike(cheat.id),\n              children: \" Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              disabled: dislikedCheats.includes(cheat.id),\n              onClick: () => handleDislike(cheat.id),\n              children: \"Dislike\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              disabled: reportedCheats.includes(cheat.id),\n              onClick: () => handleReport(cheat.id),\n              children: \"Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)\n      }, cheat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination\",\n        children: Array.from({\n          length: Math.ceil(cheats.length / hacksPerPage)\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${i + 1 === currentPage ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(i + 1),\n            className: \"page-link\",\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCheats, \"sKMv8rIalOq5loVsa30GbDWVljs=\");\n_c = NewCheats;\nexport default NewCheats;\nvar _c;\n$RefreshReg$(_c, \"NewCheats\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","NewCheats","_s","cheats","setCheats","currentPage","setCurrentPage","hacksPerPage","loading","setLoading","fetchCheats","response","get","data","Hot","error","console","paginate","pageNumber","likedCheats","setLikedCheats","JSON","parse","localStorage","getItem","dislikedCheats","setDislikedCheats","reportedCheats","setReportedCheats","handleLike","cheatId","includes","updatedCheats","map","cheat","id","likes","setItem","stringify","put","handleDislike","dislikes","handleReport","reports","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","hack","username","type","disabled","onClick","Array","from","length","Math","ceil","_","i","_c","$RefreshReg$"],"sources":["/home/erick/Desktop/life-hacks/hacks-frontend/src/Components/NewCheats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst NewCheats = () => {\n  const [cheats, setCheats] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hacksPerPage] = useState(10); // Number of hacks per page\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const fetchCheats = async () => {\n      try {\n        const response = await axios.get('/api/viewcheats');\n        setCheats(response.data.Hot);\n        setLoading(false); // Set loading to false after data is fetched\n      } catch (error) {\n        console.error('Error fetching cheats:', error);\n        setLoading(false); // Set loading to false even if there's an error\n      }\n    };\n\n    fetchCheats();\n  }, []);\n\n  // Change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const [likedCheats, setLikedCheats] = useState(\n    JSON.parse(localStorage.getItem('likedCheats')) || []\n  );\n  const [dislikedCheats, setDislikedCheats] = useState(\n    JSON.parse(localStorage.getItem('dislikedCheats')) || []\n  );\n  const [reportedCheats, setReportedCheats] = useState(\n    JSON.parse(localStorage.getItem('reportedCheats')) || []\n  );\n\n  const handleLike = async (cheatId) => {\n    try {\n      // Make sure a user can only click once\n      if (!likedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map((cheat) => {\n          if (cheat.id === cheatId) {\n            cheat.likes += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setLikedCheats([...likedCheats, cheatId]);\n        localStorage.setItem('likedCheats', JSON.stringify([...likedCheats, cheatId]));\n\n        // Send PUT request to update the like count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, { likes: 1 });\n      }\n    } catch (error) {\n      console.error('Error liking cheat:', error);\n    }\n  };\n\n  const handleDislike = async (cheatId) => {\n    try {\n      // Make sure a user can only click once\n      if (!dislikedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map((cheat) => {\n          if (cheat.id === cheatId) {\n            cheat.dislikes += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setDislikedCheats([...dislikedCheats, cheatId]);\n        localStorage.setItem('dislikedCheats', JSON.stringify([...dislikedCheats, cheatId]));\n\n        // Send PUT request to update the dislike count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, { dislikes: 1 });\n      }\n    } catch (error) {\n      console.error('Error disliking cheat:', error);\n    }\n  };\n\n  const handleReport = async (cheatId) => {\n    try {\n      // Make sure a user can only click once\n      if (!reportedCheats.includes(cheatId)) {\n        const updatedCheats = cheats.map((cheat) => {\n          if (cheat.id === cheatId) {\n            cheat.reports += 1;\n          }\n          return cheat;\n        });\n        setCheats(updatedCheats);\n        setReportedCheats([...reportedCheats, cheatId]);\n        localStorage.setItem('reportedCheats', JSON.stringify([...reportedCheats, cheatId]));\n\n        // Send PUT request to update the report count on the server\n        await axios.put(`/api/updatecheat/${cheatId}`, { reports: 1 });\n      }\n    } catch (error) {\n      console.error('Error reporting cheat:', error);\n    }\n  };\n\n  return (\n    <div className='cheat-container'>\n      {loading ? (\n        <p>Loading cheats...</p>\n      ) : (\n        <>\n          {/* Render cheats if cheats is defined and not empty */}\n          {cheats.slice((currentPage - 1) * hacksPerPage, currentPage * hacksPerPage).map((cheat) => (\n            <div key={cheat.id} className=\"cheat-card\">\n              <div className='card-container'>\n                <div>\n                  <h3>{cheat.hack}</h3>\n                  <div className='cheat-info'>\n                    <h4>{cheat.username} </h4>\n                    <p>Hack: {cheat.likes} | </p>\n                    <p>Wack: {cheat.dislikes} | </p>\n                    <p>Reports: {cheat.reports} </p>\n                  </div>\n                </div>\n                <div className='card-actions-side'>\n                  <button type='button' disabled={likedCheats.includes(cheat.id)} onClick={() => handleLike(cheat.id)}> Like</button>\n                  <button type='button' disabled={dislikedCheats.includes(cheat.id)} onClick={() => handleDislike(cheat.id)}>Dislike</button>\n                  <button type='button' disabled={reportedCheats.includes(cheat.id)} onClick={() => handleReport(cheat.id)}>Report</button>\n                </div>\n              </div>\n            </div>\n          ))}\n          {/* Pagination */}\n          <ul className=\"pagination\">\n            {Array.from({ length: Math.ceil(cheats.length / hacksPerPage) }, (_, i) => (\n              <li key={i} className={`page-item ${i + 1 === currentPage ? 'active' : ''}`}>\n                <button onClick={() => paginate(i + 1)} className=\"page-link\">\n                  {i + 1}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default NewCheats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}