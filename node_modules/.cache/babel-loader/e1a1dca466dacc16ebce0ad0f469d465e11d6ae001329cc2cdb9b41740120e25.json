{"ast":null,"code":"var _jsxFileName = \"/home/erick/Desktop/life-hacks/hacks-frontend/src/Components/NewCheats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewCheats() {\n  _s();\n  const [cheats, setCheats] = useState([]);\n  useEffect(() => {\n    fetchCheats();\n  }, []);\n  const fetchCheats = async () => {\n    try {\n      const response = await fetch('api/viewcheats');\n      if (!response.ok) {\n        throw new Error('Failed to fetch cheats');\n      }\n      const data = await response.json();\n      setCheats(data['All Cheats']);\n    } catch (error) {\n      console.error('Error fetching cheats:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cheat-container\",\n    children: currentHacks.map(cheat => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cheat-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: cheat.hack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cheat-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [cheat.username, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hack: \", cheat.likes, \" | \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Wack: \", cheat.dislikes, \" | \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Reports: \", cheat.reports, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-actions-side\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, cheat.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(NewCheats, \"Hop1d5XTD8EOJdwtR6dvAxvz2H0=\");\n_c = NewCheats;\nexport default NewCheats;\nvar _c;\n$RefreshReg$(_c, \"NewCheats\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NewCheats","_s","cheats","setCheats","fetchCheats","response","fetch","ok","Error","data","json","error","console","className","children","currentHacks","map","cheat","hack","fileName","_jsxFileName","lineNumber","columnNumber","username","likes","dislikes","reports","id","_c","$RefreshReg$"],"sources":["/home/erick/Desktop/life-hacks/hacks-frontend/src/Components/NewCheats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction NewCheats() {\n  const [cheats, setCheats] = useState([]);\n\n  useEffect(() => {\n    fetchCheats();\n  }, []);\n\n  const fetchCheats = async () => {\n    try {\n      const response = await fetch('api/viewcheats');\n      if (!response.ok) {\n        throw new Error('Failed to fetch cheats');\n      }\n      const data = await response.json();\n      setCheats(data['All Cheats']);\n    } catch (error) {\n      console.error('Error fetching cheats:', error);\n    }\n  };\n\n  return (\n    <div className='cheat-container'>\n      {currentHacks.map((cheat) => (\n        <div key={cheat.id} className=\"cheat-card\">\n            <div className='card-container'>\n                <div>\n                    <h3>{cheat.hack}</h3>\n                    <div className='cheat-info'>\n                        <h4>{cheat.username} </h4>\n                        <p>Hack: {cheat.likes} | </p>\n                        <p>Wack: {cheat.dislikes} | </p>\n                        <p>Reports: {cheat.reports} </p>\n\n                    </div>\n                </div>\n                <div className='card-actions-side'>\n                    {/* <button type='button' disabled={likedCheats.includes(cheat.id)} onClick={() => handleLike(cheat.id)}> Like</button>\n                    <button type='button' disabled={dislikedCheats.includes(cheat.id)} onClick={() => handleDislike(cheat.id)}>Dislike</button>\n                    <button type='button' disabled={reportedCheats.includes(cheat.id)} onClick={() => handleReport(cheat.id)}>Report</button> */}\n                \n                </div>\n            </div>\n  \n        </div>\n      ))}\n\n     \n      {/* <ul className=\"pagination\">\n        {Array.from({ length: Math.ceil(cheats.length / hacksPerPage) }, (_, i) => (\n          <li key={i} className={`page-item ${i + 1 === currentPage ? 'active' : ''}`}>\n            <button onClick={() => paginate(i + 1)} className=\"page-link\">\n              {i + 1}\n            </button>\n          </li>\n        ))}\n      </ul> */}\n    </div>\n  );\n}\n\nexport default NewCheats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}