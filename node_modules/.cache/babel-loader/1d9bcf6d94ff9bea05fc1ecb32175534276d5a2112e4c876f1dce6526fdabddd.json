{"ast":null,"code":"var _jsxFileName = \"/home/erick/Desktop/life-hacks/hacks-frontend/src/Components/Singlehack.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Singlehack = () => {\n  _s();\n  const [cheats, setCheats] = useState([]);\n  useEffect(() => {\n    const fetchCheats = async () => {\n      try {\n        const response = await axios.get('/api/hot');\n        setCheats(response.data.Hot);\n      } catch (error) {\n        console.error('Error fetching cheats:', error);\n      }\n    };\n    fetchCheats();\n  }, []);\n  const handleLike = async cheatId => {\n    try {\n      // Make sure a user can only click once\n      const updatedCheats = cheats.map(cheat => {\n        if (cheat.id === cheatId && !cheat.liked) {\n          cheat.likes += 1;\n          cheat.liked = true;\n        }\n        return cheat;\n      });\n      setCheats(updatedCheats);\n\n      // Send PUT request to update the like count on the server\n      await axios.put(`/api/addcheat/${cheatId}`, {\n        likes: 1\n      });\n    } catch (error) {\n      console.error('Error liking cheat:', error);\n    }\n  };\n  const handleDislike = async cheatId => {\n    try {\n      // Make sure a user can only click once\n      const updatedCheats = cheats.map(cheat => {\n        if (cheat.id === cheatId && !cheat.disliked) {\n          cheat.dislikes += 1;\n          cheat.disliked = true;\n        }\n        return cheat;\n      });\n      setCheats(updatedCheats);\n\n      // Send PUT request to update the dislike count on the server\n      await axios.put(`/api/addcheat/${cheatId}`, {\n        dislikes: 1\n      });\n    } catch (error) {\n      console.error('Error disliking cheat:', error);\n    }\n  };\n  const handleReport = async cheatId => {\n    try {\n      // Make sure a user can only click once\n      const updatedCheats = cheats.map(cheat => {\n        if (cheat.id === cheatId && !cheat.reported) {\n          cheat.reports += 1;\n          cheat.reported = true;\n        }\n        return cheat;\n      });\n      setCheats(updatedCheats);\n\n      // Send PUT request to update the report count on the server\n      await axios.put(`/api/addcheat/${cheatId}`, {\n        reports: 1\n      });\n    } catch (error) {\n      console.error('Error reporting cheat:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cheat-container\",\n    children: cheats.map(cheat => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cheat-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: cheat.hack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cheat-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [cheat.username, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hack: \", cheat.likes, \" | \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Wack: \", cheat.dislikes, \" | \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Reports: \", cheat.reports, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-actions-side\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleLike(cheat.id),\n            children: \" Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleDislike(cheat.id),\n            children: \"Dislike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleReport(cheat.id),\n            children: \"Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, cheat.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Singlehack, \"Hop1d5XTD8EOJdwtR6dvAxvz2H0=\");\n_c = Singlehack;\nexport default Singlehack;\nvar _c;\n$RefreshReg$(_c, \"Singlehack\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Singlehack","_s","cheats","setCheats","fetchCheats","response","get","data","Hot","error","console","handleLike","cheatId","updatedCheats","map","cheat","id","liked","likes","put","handleDislike","disliked","dislikes","handleReport","reported","reports","className","children","hack","fileName","_jsxFileName","lineNumber","columnNumber","username","type","onClick","_c","$RefreshReg$"],"sources":["/home/erick/Desktop/life-hacks/hacks-frontend/src/Components/Singlehack.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Singlehack = () => {\n  const [cheats, setCheats] = useState([]);\n\n  useEffect(() => {\n    const fetchCheats = async () => {\n      try {\n        const response = await axios.get('/api/hot');\n        setCheats(response.data.Hot);\n      } catch (error) {\n        console.error('Error fetching cheats:', error);\n      }\n    };\n\n    fetchCheats();\n  }, []);\n\n  const handleLike = async (cheatId) => {\n    try {\n      // Make sure a user can only click once\n      const updatedCheats = cheats.map((cheat) => {\n        if (cheat.id === cheatId && !cheat.liked) {\n          cheat.likes += 1;\n          cheat.liked = true;\n        }\n        return cheat;\n      });\n      setCheats(updatedCheats);\n\n      // Send PUT request to update the like count on the server\n      await axios.put(`/api/addcheat/${cheatId}`, { likes: 1 });\n    } catch (error) {\n      console.error('Error liking cheat:', error);\n    }\n  };\n\n  const handleDislike = async (cheatId) => {\n    try {\n      // Make sure a user can only click once\n      const updatedCheats = cheats.map((cheat) => {\n        if (cheat.id === cheatId && !cheat.disliked) {\n          cheat.dislikes += 1;\n          cheat.disliked = true;\n        }\n        return cheat;\n      });\n      setCheats(updatedCheats);\n\n      // Send PUT request to update the dislike count on the server\n      await axios.put(`/api/addcheat/${cheatId}`, { dislikes: 1 });\n    } catch (error) {\n      console.error('Error disliking cheat:', error);\n    }\n  };\n\n  const handleReport = async (cheatId) => {\n    try {\n      // Make sure a user can only click once\n      const updatedCheats = cheats.map((cheat) => {\n        if (cheat.id === cheatId && !cheat.reported) {\n          cheat.reports += 1;\n          cheat.reported = true;\n        }\n        return cheat;\n      });\n      setCheats(updatedCheats);\n\n      // Send PUT request to update the report count on the server\n      await axios.put(`/api/addcheat/${cheatId}`, { reports: 1 });\n    } catch (error) {\n      console.error('Error reporting cheat:', error);\n    }\n  };\n\n  return (\n    <div className='cheat-container'>\n      {cheats.map((cheat) => (\n        <div key={cheat.id} className=\"cheat-card\">\n            <div className='card-container'>\n                <div>\n                    <h3>{cheat.hack}</h3>\n                    <div className='cheat-info'>\n                        <h4>{cheat.username} </h4>\n                        <p>Hack: {cheat.likes} | </p>\n                        <p>Wack: {cheat.dislikes} | </p>\n                        <p>Reports: {cheat.reports} </p>\n\n                    </div>\n                </div>\n                <div className='card-actions-side'>\n                    <button type='button' onClick={() => handleLike(cheat.id)}> Like</button>\n                    <button type='button' onClick={() => handleDislike(cheat.id)}>Dislike</button>\n                    <button type='button' onClick={() => handleReport(cheat.id)}>Report</button>\n                \n                </div>\n            </div>\n  \n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Singlehack;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}